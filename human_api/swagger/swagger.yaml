openapi: 3.0.0
info:
  title: Human Protocol API
  description: Rest interface to interact with the Human Protocol
  contact:
    email: dev@hmt.ai
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
servers:
- url: /
tags:
- name: Factory
  description: Endpoint for Job factory management
- name: Manifest
  description: Endpoint for Manifest management
- name: Jobs
  description: Endpoint for all job management
paths:
  /factory:
    get:
      tags:
      - Factory
      summary: Returns addresses of all jobs deployed in the factory
      description: |
        Receive the list of all jobs in the factory
      operationId: get_factory
      parameters:
      - name: address
        in: query
        description: Deployed Factory address
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayer
        in: query
        description: address paying for the gas costs
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayerPrivate
        in: query
        description: Private Key for the address paying for the gas costs
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: List of all jobs deployed in the factory
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job_list_response'
        "400":
          description: invalid input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_parameter_response'
        "404":
          description: Address does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_notexist_response'
      x-openapi-router-controller: human_api.controllers.factory_controller
    post:
      tags:
      - Factory
      summary: Creates a new factory and returns the address
      description: Creates a new factory and returns the address
      operationId: new_factory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/factory_create_body'
      responses:
        "200":
          description: Launched address of the factory
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/string_data_response'
        "400":
          description: invalid input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_parameter_response'
        "500":
          description: Could not create factory
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_notcreate_response'
      x-openapi-router-controller: human_api.controllers.factory_controller
  /manifest/validate:
    get:
      tags:
      - Manifest
      summary: Validates a manifest provided by a public URL
      description: |
        Validates a manifest provided by a public URL
      operationId: validate_manifest
      parameters:
      - name: manifestUrl
        in: query
        description: Publicly available manifest URL
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/manifest_validity_response'
        "404":
          description: URL does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_notexist_response'
      x-openapi-router-controller: human_api.controllers.manifest_controller
  /job:
    post:
      tags:
      - Jobs
      summary: Creates a new Job and returns the address
      description: Creates a new job and returns the address
      operationId: new_job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/job_create_body'
      responses:
        "200":
          description: Deployed address of the job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/string_data_response'
        "401":
          description: invalid input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_parameter_response'
      x-openapi-router-controller: human_api.controllers.jobs_controller
  /job/launcher:
    get:
      tags:
      - Jobs
      summary: Address of the launcher of a given job address
      description: |
        Receive the address of the launcher of a given job address
      operationId: get_job_launcher
      parameters:
      - name: address
        in: query
        description: Deployed Job address
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayer
        in: query
        description: address paying for the gas costs
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayerPrivate
        in: query
        description: Private Key for the address paying for the gas costs
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Launcher address of the job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/string_data_response'
        "400":
          description: invalid input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_parameter_response'
        "404":
          description: Address does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_notcreate_response'
      x-openapi-router-controller: human_api.controllers.jobs_controller
  /job/status:
    get:
      tags:
      - Jobs
      summary: Status of a given job address
      description: |
        Receive the status of a given job address
      operationId: get_job_status
      parameters:
      - name: address
        in: query
        description: Deployed Job address
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayer
        in: query
        description: address paying for the gas costs
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayerPrivate
        in: query
        description: Private Key for the address paying for the gas costs
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Status of the job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job_status_response'
        "400":
          description: invalid input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_parameter_response'
        "404":
          description: Address does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_notexist_response'
      x-openapi-router-controller: human_api.controllers.jobs_controller
  /job/manifestUrl:
    get:
      tags:
      - Jobs
      summary: Manifest URL of a given job address
      description: |
        Receive the Manifest URL of a given job address
      operationId: get_job_manifest_url
      parameters:
      - name: address
        in: query
        description: Deployed Job address
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayer
        in: query
        description: address paying for the gas costs
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayerPrivate
        in: query
        description: Private Key for the address paying for the gas costs
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Manifest URL of the job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/string_data_response'
        "400":
          description: invalid input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_parameter_response'
        "404":
          description: Address does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_notexist_response'
      x-openapi-router-controller: human_api.controllers.jobs_controller
  /job/manifestHash:
    get:
      tags:
      - Jobs
      summary: Manifest Hash of a given job address
      description: |
        Receive the Manifest Hash of a given job address
      operationId: get_job_manifest_hash
      parameters:
      - name: address
        in: query
        description: Deployed Job address
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayer
        in: query
        description: address paying for the gas costs
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayerPrivate
        in: query
        description: Private Key for the address paying for the gas costs
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Manifest Hash of the job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/string_data_response'
        "400":
          description: invalid input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_parameter_response'
        "404":
          description: Address does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_notexist_response'
      x-openapi-router-controller: human_api.controllers.jobs_controller
  /job/balance:
    get:
      tags:
      - Jobs
      summary: Balance in HMT of a given job address
      description: |
        Balance in HMT of a given job address
      operationId: get_job_balanace
      parameters:
      - name: address
        in: query
        description: Deployed Job address
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayer
        in: query
        description: address paying for the gas costs
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayerPrivate
        in: query
        description: Private Key for the address paying for the gas costs
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Manifest Hash of the job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/int_data_response'
        "400":
          description: invalid input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_parameter_response'
        "404":
          description: Address does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_notexist_response'
      x-openapi-router-controller: human_api.controllers.jobs_controller
  /job/abort:
    get:
      tags:
      - Jobs
      summary: Abort a given job
      description: |
        Abort a given job
      operationId: abort_job
      parameters:
      - name: address
        in: query
        description: Deployed Job address
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayer
        in: query
        description: address paying which started the job or a trusted handler
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayerPrivate
        in: query
        description: Private Key for the address paying for the gas costs
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Was the action successful or not
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bool_data_response'
        "400":
          description: invalid input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_parameter_response'
        "401":
          description: Unauthorized Gas Payer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_unauthorized_response'
        "404":
          description: Address does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_notexist_response'
      x-openapi-router-controller: human_api.controllers.jobs_controller
  /job/cancel:
    get:
      tags:
      - Jobs
      summary: Cancel a given job
      description: |
        Cancel a given job
      operationId: cancel_job
      parameters:
      - name: address
        in: query
        description: Deployed Job address
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayer
        in: query
        description: address paying which started the job or a trusted handler
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayerPrivate
        in: query
        description: Private Key for the address paying for the gas costs
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Was the action successful or not
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bool_data_response'
        "400":
          description: invalid input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_parameter_response'
        "401":
          description: Unauthorized Gas Payer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_unauthorized_response'
        "404":
          description: Address does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_notexist_response'
      x-openapi-router-controller: human_api.controllers.jobs_controller
  /job/complete:
    get:
      tags:
      - Jobs
      summary: Complete a given job
      description: |
        Complete a given job
      operationId: complete_job
      parameters:
      - name: address
        in: query
        description: Deployed Job address
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayer
        in: query
        description: address paying which started the job or a trusted handler
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayerPrivate
        in: query
        description: Private Key for the address paying for the gas costs
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Was the action successful or not
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bool_data_response'
        "400":
          description: invalid input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_parameter_response'
        "401":
          description: Unauthorized Gas Payer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_unauthorized_response'
        "404":
          description: Address does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_notexist_response'
      x-openapi-router-controller: human_api.controllers.jobs_controller
  /job/storeIntermediateResults:
    post:
      tags:
      - Jobs
      summary: Store intermediate results to S3 for the given escrow
      description: Given an escrow address, a URL where the results can be found in the form of a JSON file, and a public key will upload to S3 these intermediate results and will emit an event on the escrow contract
      operationId: store_job_intermediate_results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store_job_intermediate_results_body'
      responses:
        "200":
          description: Store intermediate results for the job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bool_data_response'
        "400":
          description: invalid input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_parameter_response'
        "401":
          description: Unauthorized Gas Payer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_unauthorized_response'
        "404":
          description: Address does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_notexist_response'
      x-openapi-router-controller: human_api.controllers.jobs_controller
  /job/bulkPayout:
    post:
      tags:
      - Jobs
      summary: Performs a payout to multiple ethereum addresses.
      description: When the payout happens, final results are uploaded to S3 and contract's state is updated to Partial or Paid depending on contract's balance.
      operationId: bulk_payout_job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bulk_payout_job_body'
      responses:
        "200":
          description: Bulk payments sent gracefully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bool_data_response'
        "400":
          description: invalid input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_parameter_response'
        "401":
          description: Unauthorized Gas Payer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_unauthorized_response'
        "404":
          description: Address does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_notexist_response'
      x-openapi-router-controller: human_api.controllers.jobs_controller
  /job/addTrustedHandlers:
    post:
      tags:
      - Jobs
      summary: Add trusted handlers that can freely transact with the contract
      description: |
        A trusted handler can perform aborts and cancels, for example
      operationId: add_job_trusted_handlers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_job_trusted_handlers_body'
      responses:
        "200":
          description: Trusted handlers added gracefully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bool_data_response'
        "400":
          description: invalid input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_parameter_response'
        "401":
          description: Unauthorized Gas Payer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_unauthorized_response'
        "404":
          description: Address does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_notexist_response'
      x-openapi-router-controller: human_api.controllers.jobs_controller
  /job/intermediateResults:
    get:
      tags:
      - Jobs
      summary: Retrieve the intermediate results stored by the Recording Oracle
      description: |
        Retrieve the intermediate results stored by the Recording Oracle
      operationId: job_intermediate_results
      parameters:
      - name: address
        in: query
        description: Deployed Job address
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayer
        in: query
        description: address paying for the gas costs
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayerPrivate
        in: query
        description: Private Key for the address paying for the gas costs
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: repOraclePrivate
        in: query
        description: Private Key for the reputation oracle
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Stringified JSON with intermediate results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/string_data_response'
        "400":
          description: invalid input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_parameter_response'
        "404":
          description: Address does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_notexist_response'
      x-openapi-router-controller: human_api.controllers.jobs_controller
  /job/finalResults:
    get:
      tags:
      - Jobs
      summary: Retrieve the final results
      description: |
        Retrieve the final results
      operationId: job_final_results
      parameters:
      - name: address
        in: query
        description: Deployed Job address
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayer
        in: query
        description: address paying for the gas costs
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gasPayerPrivate
        in: query
        description: Private Key for the address paying for the gas costs
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: repOraclePrivate
        in: query
        description: Private Key for the reputation oracle
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Stringified JSON with final results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/string_data_response'
        "400":
          description: invalid input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_parameter_response'
        "404":
          description: Address does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_notexist_response'
      x-openapi-router-controller: human_api.controllers.jobs_controller
components:
  schemas:
    job_list_response:
      type: object
      properties:
        jobs:
          type: array
          items:
            type: string
      example:
        jobs:
        - 0x000000abcdef
        - 0x000000abcdef
    factory_create_body:
      type: object
      properties:
        gasPayer:
          type: string
        gasPayerPrivate:
          type: string
    manifest_validity_response:
      type: object
      properties:
        valid:
          type: boolean
          example: false
        errors:
          type: array
          items:
            $ref: '#/components/schemas/error_parameter_response'
      example:
        valid: false
        errors:
        - parameter_name: gas_payer
          error: Invalid parameter
        - parameter_name: gas_payer
          error: Invalid parameter
    job_create_body:
      type: object
      properties:
        gasPayer:
          type: string
          example: 0x000000000000000
        gasPayerPrivate:
          type: string
          example: 0x000000000000000
        factoryAddress:
          type: string
          example: 0x000000000000000
        repOraclePub:
          type: string
          example: <reputation oracles public address> 0x0000000
        manifestUrl:
          type: string
          example: http://example.com/manifest.json
    store_job_intermediate_results_body:
      type: object
      properties:
        gasPayer:
          type: string
          example: 0x000000000000000
        gasPayerPrivate:
          type: string
          example: 0x000000000000000
        address:
          type: string
          example: 0x000000000000000
        repOraclePub:
          type: string
          example: <reputation oracles public address> 0x0000000
        resultsUrl:
          type: string
          example: http://example.com/results.json
    bulk_payout_job_body:
      type: object
      properties:
        gasPayer:
          type: string
          example: 0x000000000000000
        gasPayerPrivate:
          type: string
          example: 0x000000000000000
        address:
          type: string
          example: 0x000000000000000
        repOraclePub:
          type: string
          example: <reputation oracles public address> 0x0000000
        resultsUrl:
          type: string
          example: http://example.com/results.json
        payoutsUrl:
          type: string
          example: http://example.com/results.json
    add_job_trusted_handlers_body:
      type: object
      properties:
        gasPayer:
          type: string
          example: 0x000000000000000
        gasPayerPrivate:
          type: string
          example: 0x000000000000000
        address:
          type: string
          example: 0x000000000000000
        handlers:
          type: array
          items:
            type: string
    job_status_response:
      type: object
      properties:
        status:
          type: string
          enum:
          - Launched
          - Pending
          - Partial
          - Paid
          - Complete
          - Cancelled
      example:
        status: Launched
    string_data_response:
      type: object
      properties:
        data:
          type: string
          example: data
      example:
        data: data
    int_data_response:
      type: object
      properties:
        data:
          type: integer
          example: 110000
      example:
        data: 110000
    bool_data_response:
      type: object
      properties:
        success:
          type: boolean
      example:
        success: true
    error_notcreate_response:
      type: object
      properties:
        error:
          type: string
          example: Could not create
    error_parameter_response:
      type: object
      properties:
        error:
          type: string
          example: Invalid parameter
        parameter_name:
          type: string
          example: gas_payer
      example:
        parameter_name: gas_payer
        error: Invalid parameter
    error_notexist_response:
      type: object
      properties:
        error:
          type: string
          example: address / url does not exist
    error_unauthorized_response:
      type: object
      properties:
        error:
          type: string
          example: Unauthorized